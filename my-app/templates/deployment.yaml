apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx-deployment
  labels:
    app: nginx
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: nginx
  strategy:
    type: {{ .Values.deploymentStrategy.type }}
    rollingUpdate:
      maxSurge: {{ .Values.deploymentStrategy.rollingUpdate.maxSurge }}
      maxUnavailable: {{ .Values.deploymentStrategy.rollingUpdate.maxUnavailable }}
  template:
    metadata:
      labels:
        app: nginx
      annotations:
        checksum/configmap: {{ include (print $.Template.BasePath "/configmap-nginx.yaml") . | sha256sum }}
        checksum/htmltemplate: {{ include (print $.Template.BasePath "/configmap-html.yaml") . | sha256sum }}
    spec:
      containers:
      - name: nginx
        image: {{ .Values.nginx.image }}
        ports:
        - containerPort: {{ .Values.service.port }}
        env:
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        volumeMounts:
        - name: nginx-config
          mountPath: /etc/nginx/conf.d
        - name: html-template
          mountPath: /usr/share/nginx/html/template.html
          subPath: template.html
        command: ["/bin/sh"]
        args: ["-c", "envsubst < /usr/share/nginx/html/template.html > /usr/share/nginx/html/index.html && nginx -g 'daemon off;'"]
      volumes:
      - name: nginx-config
        configMap:
          name: nginx-config
      - name: html-template
        configMap:
          name: html-template

